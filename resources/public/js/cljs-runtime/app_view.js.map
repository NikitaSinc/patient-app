{"version":3,"sources":["app_view.cljs"],"mappings":";AAQA,uBAAA,vBAAMA,sDAAaC;AAAnB,AACE,mDAAK,AAACC,SAAY,CAAG,AAAiB,KAAAC,2BAAY,AAAiBF;;AAErE,iCAAA,jCAAMG;AAAN,AACE,IAAMC,IAAE,sDAAA,mFAAA,zIAACC;IACHC,UAAQ,sDAAA,mFAAA,zIAACD;IACTE,SAAO,sDAAA,mFAAA,zIAACF;AAFd,AAGE,yGAAA,AAAAG,zGAACC,yHAASH;;AACV,oBAAI,iBAAAI,oBACE,AAAA,6FAAA,AAAAF,gBAAaJ;AADf,AAAA,oBAAAM;AAAA,IAAAA,wBAEE,AAAA,6FAAA,AAAAF,gBAAaJ;AAFf,AAAA,oBAAAM;AAAA,IAAAA,wBAGE,AAAA,kGAAA,AAAAF,gBAAgBJ;AAHlB,AAAA,oBAAAM;AAAA,IAAAA,wBAIE,AAAA,sGAAA,AAAAF,gBAAiBJ;AAJnB,AAAA,oBAAAM;AAKE,OAAA,4FAAA,AAAAF,gBAAaJ;;AALfM;;;AAAAA;;;AAAAA;;;AAAAA;;;AAMF,GAAI,CAAA,AAAAF,2BAAA,XAAOD;AACT,8BAAA,mFAAA,oEAAA,AAAAC,9KAACG,8LAA4BL;;AAC7B,8BAAA,mFAAA,0EAAA,AAAAE,pLAACG,oMAA+BL;;;AAClC,8BAAA,mFAAA,+DAAA,zKAACK;;;AAEP,yBAAA,zBAAMC;AAAN,AACE,IAAMC,QAAM,sDAAA,mFAAA,zIAACR;AAAb,AAAA,0FAAA,mDAEC,yCAAA,mFAAA,8CAAA,AAAAG,+BAAA,vMAAI,GAAK,CAAA,AAAAA,0BAAA,VAAOK,oKACTA;;AAEV,yBAAA,zBAAMC;AAAN,AAAA,0FAAA,mDAAA,2CAAA,yIAAA,mFAAA,8DAAA,mFAAA,yDAAA,mFAAA,uDAAA,2CAAA,sDAAA,yBAAA,mFAAA,uDAAA,2CAAA,sDAAA,iCAAA,mFAAA,8DAAA,mFAAA,yDAAA,mFAAA,uDAAA,2CAAA,sDAAA,yBAAA,mFAAA,uDAAA,2CAAA,sDAAA,gCAAA,mFAAA,8DAAA,mFAAA,sDAAA,2CAAA,qDAAA,uDAAA,sDAAA,wBAAA,mFAAA,sDAAA,2CAAA,qDAAA,uDAAA,sDAAA,//EACgB;;AAahB,yBAAA,zBAAMC;AAAN,AAAA,0FAAA,kDAAA,mFAAA,iDAAA,oHAAA,mFAAA,iDAAA,oHAAA,mFAAA,iDAAA,wHAAA,mFAAA,iDAAA,sHAAA,mFAAA,iDAAA,wHAAA,mFAAA,iDAAA,mFAAA,yDAAA,2CAAA,6DAAA,n4CAESC,wPACAC,wPACAC,4PACAC,0PACAC;AANT,AAO6B,OAACjB;WAP9B,uBAAA,mFAAA,iDAAA,mFAAA,yDAAA,2CAAA,6DAAA;AAAA,AAQ6B,8BAAA,mFAAA,1GAACQ;WAR9B;;AAUA,iBAAA,jBAAMU;AAAN,AAAA,0FAAA,mDAAA,mFAAA,uDAAA,2CAAA,wIAAA,mFAAA,uDAAA,mFAAA,kDAAA,mFAAA,iDAAA,cAAA,mFAAA,iDAAA,cAAA,mFAAA,iDAAA,iBAAA,mFAAA,iDAAA,cAAA,mFAAA,iDAAA,kBAAA,mFAAA,yDAAA,mFAAA,yEAAA,mFAAA,sDAAA,2CAAA,5hDAEmB,olDAUC,iFACf,iBAAMC,WAAS,sDAAA,mFAAA,zIAACjB;IACVE,SAAO,sDAAA,mFAAA,zIAACF;AADd,AAEE,OAACkB,8CACC,iBAAAC,qBAAA,uCAAAC;AAAA,AAAA,YAAAC,kBAAA,KAAA;AAAA,AAAA,IAAAD,eAAAA;;AAAA,AAAA,IAAAE,qBAAA,AAAAC,cAAAH;AAAA,AAAA,GAAAE;AAAA,AAAA,IAAAF,eAAAE;AAAA,AAAA,GAAA,AAAAE,6BAAAJ;AAAA,IAAAK,kBAm4E0C,AAAAkB,sBAAAvB;IAn4E1CM,qBAAA,AAAAC,gBAAAF;IAAAG,WAAA,AAAAC,uBAAAH;AAAA,AAAA,GAAA,AAAA,iBAAAI,WAAA;;AAAA,AAAA,GAAA,CAAAA,WAAAJ;AAAA,QAAA,AAAAK,eAAAN,gBAAAK,nCAAMU;AAAN,AAAA,AAAA,AAAAR,uBAAAJ,SACE,AACCV,8CAAM,4KAAA,oHAAA,mFAAA,kDAAA,mFAAA,2JAAA,mFAAA,4JAAA,mFAAA,iKAAA,mFAAA,kLAAA,mFAAA,oKAAA,mFAAA,iDAAA,mFAAA,yDAAA,2CAAA,6DAAA,x+DAAI,6CAAA,AAAAf,7CAACsC,6DAAGvC,QAAO,AAAA,gGAAesC,wFAClC9B,uBAAc8B,mRAET,AAAA,+FAAeA,+IACf,AAAA,gGAAeA,+IACf,AAAA,qGAAkBA,+IAClB,AAAC9C,qBAAY,AAAA,gGAAe8C,gJAC5B,AAAA,wGAAmBA;;AAPpB,AAQsB,8BAAA,mFAAA,1GAAClC,2LAAiCkC;;SARxD,yBAAA,mFAAA,iDAAA,mFAAA,yDAAA,2CAAA,6DAAA;;AAAA,AAWc,8BAAA,mFAAA,1GAAClC,sLAA8B,AAAA,gGAAekC;;SAX5D;;AAFT,eAAA,CAAAV,WAAA;;;;AAAA;;;;;AAAA,OAAAG,qBAAA,AAAAC,gBAAAN,UAAA,AAAAO,6BAAA,AAAAC,qBAAAhB;;AAAA,OAAAa,qBAAA,AAAAC,gBAAAN,UAAA;;;AAAA,QAAA,AAAAS,gBAAAjB,pBAAMoB;AAAN,AAAA,OAAAF,eACE,AACCpB,8CAAM,4KAAA,oHAAA,mFAAA,kDAAA,mFAAA,2JAAA,mFAAA,4JAAA,mFAAA,iKAAA,mFAAA,kLAAA,mFAAA,oKAAA,mFAAA,iDAAA,mFAAA,yDAAA,2CAAA,6DAAA,x+DAAI,6CAAA,AAAAf,7CAACsC,6DAAGvC,QAAO,AAAA,gGAAesC,wFAClC9B,uBAAc8B,mRAET,AAAA,+FAAeA,+IACf,AAAA,gGAAeA,+IACf,AAAA,qGAAkBA,+IAClB,AAAC9C,qBAAY,AAAA,gGAAe8C,gJAC5B,AAAA,wGAAmBA;;AAPpB,AAQsB,8BAAA,mFAAA,1GAAClC,2LAAiCkC;;SARxD,yBAAA,mFAAA,iDAAA,mFAAA,yDAAA,2CAAA,6DAAA;;AAAA,AAWc,8BAAA,mFAAA,1GAAClC,sLAA8B,AAAA,gGAAekC;;4CAbrE,AAAAL,6BAAA,AAAAI,eAAAnB,/EAES;;;AAFT;;;;GAAA,KAAA;;AAAA,AAAA,OAAAD,mBAAA,AAAAhB,gBAASc;;KAeb,AAACC,8CACC,yPAAA,mFAAA,kDAAA,mFAAA,iDAAA,oHAAA,mFAAA,iDAAA,oHAAA,mFAAA,iDAAA,wHAAA,mFAAA,iDAAA,sHAAA,mFAAA,iDAAA,wHAAA,mFAAA,iDAAA,mFAAA,yDAAA,2CAAA,6DAAA,t9DAAI,CAAA,AAAAf,+OAAA,/NAAO,sDAAA,mFAAA,zIAACH,kkBAEPW,wPACAC,wPACAC,4PACAC,0PACAC;AANL,AAOyB,OAACjB;WAP1B,8BAAA;;AASP,eAAA,fAAM4C;AAAN,AAAA,0FAAA,mDAAA,2CAAA,2IAAA,kHAAA,0GAAA,/SACgB,sKACZjC,kHACAO,0GACAT","names":["app-view/compute-age","dob","js/Math.abs","js/Date","app-view/validation-dispatcher","v","re_frame.core.subscribe","patient","change","cljs.core/deref","cljs.core.println","and__5043__auto__","re-frame.core/dispatch","app-view/error-message","error","app-view/table-control","app-view/changeble-row","inputs/fio-input","inputs/oms-input","inputs/gender-select","inputs/birth-input","inputs/address-input","app-view/table","patients","cljs.core.doall","iter__5523__auto__","s__46065","cljs.core/LazySeq","temp__5804__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__5521__auto__","size__5522__auto__","cljs.core/count","b__46067","cljs.core/chunk-buffer","i__46066","cljs.core/-nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__46064","cljs.core/chunk-rest","cljs.core/first","cljs.core/cons","cljs.core/rest","p","cljs.core._EQ_","app-view/app","cljs.core/chunk-first"],"sourcesContent":["(ns app-view\n  (:require\n                  [re-frame.core :as rf]\n                  [stylo.core :refer [c]]\n                  [clojure.string :as s]\n                  [app-events :as ev]\n                  [inputs :as i]))\n\n(defn compute-age [dob]\n  (str (js/Math.abs (- (.getUTCFullYear (js/Date.)) (.getUTCFullYear dob)))))\n\n(defn validation-dispatcher []\n  (let [v (rf/subscribe [:new-patient-is-valid])\n        patient (rf/subscribe [:new-patient])\n        change (rf/subscribe [:patient-change])]\n    (println @patient)\n    (if (and\n          (:oms-valid @v)\n          (:fio-valid @v)\n          (:gender-valid @v)\n          (:address-valid @v)\n          (:dob-valid @v))\n      (if (nil? @change)\n        (rf/dispatch [:add-patients @patient])\n        (rf/dispatch [:update-patients @patient]))\n      (rf/dispatch [:set-error \"Not all fields are valid!\"]))))\n\n(defn error-message []\n  (let [error (rf/subscribe [:error])]\n  [:div\n   (if (not (nil? @error))\n     [:p @error])]))\n\n(defn table-control []\n  [:div {:class (c :flex)}\n   [:input]\n   [:select\n    [:option {:value \"By FIO\"} ]\n    [:option {:value \"By OMS\"} ]]\n   [:input]\n   [:select\n    [:option {:value \"Yanger\"} ]\n    [:option {:value \"Older\"} ]]\n   [:fieldset\n    [:input {:type :radio :value \"Males\"} ]\n    [:input {:type :radio :value \"Females\"} ]]])\n\n(defn changeble-row []\n  [:tr\n   [:td [i/fio-input]]\n   [:td [i/oms-input]]\n   [:td [i/gender-select]]\n   [:td [i/birth-input]]\n   [:td [i/address-input]]\n   [:td [:button {:on-click #(validation-dispatcher)} \"Save\"]]\n   [:td [:button {:on-click #(rf/dispatch [:patient-change-set])} \"Discard\"]]])\n\n(defn table []\n  [:div\n   [:table {:class (c :table [:border 2] [:w 300]  :rounded)}\n    [:thead\n     [:tr\n      [:th \"FIO\"]\n      [:th \"OMS\"]\n      [:th \"Gender\"]\n      [:th \"Age\"]\n      [:th \"Address\"]\n      [:th]\n      [:th]]]\n    [:tbody {:class (c [:px 5])}\n     (let [patients (rf/subscribe [:patients])\n           change (rf/subscribe [:patient-change])]\n       (doall\n         (for [p @patients]\n           ^{:key p}\n           (doall (if (= @change (:patients/oms p))\n             [changeble-row p]\n             [:tr\n              [:td (:patients/fio p)]\n              [:td (:patients/oms p)]\n              [:td (:patients/gender p)]\n              [:td (compute-age (:patients/dob p))]\n              [:td (:patients/address p)]\n              [:td [:button {:on-click #(rf/dispatch [:patient-change-set p])}\n                    \"Change\"]]\n              [:td [:button\n                    {:on-click #(rf/dispatch [:delete-patients (:patients/oms p)])}\n                    \"Delete\"]]])))))\n     (doall\n       (if (nil? @(rf/subscribe [:patient-change]))\n     [:tr\n      [:td [i/fio-input]]\n      [:td [i/oms-input]]\n      [:td [i/gender-select]]\n      [:td [i/birth-input]]\n      [:td [i/address-input]]\n      [:td [:button {:on-click #(validation-dispatcher)} \"Add\"]]]))]]])\n\n(defn app []\n  [:div {:class (c [:px 12])}\n   [table-control]\n   [table]\n   [error-message]])\n"]}