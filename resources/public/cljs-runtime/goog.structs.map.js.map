{
"version":3,
"file":"goog.structs.map.js",
"lineCount":222,
"mappings":"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",
"sources":["goog.structs.map.js"],
"sourcesContent":["goog.provide(\"goog.structs.Map\");\ngoog.require(\"goog.collections.iters\");\ngoog.require(\"goog.iter.Iterator\");\ngoog.require(\"goog.iter.StopIteration\");\ngoog.require(\"goog.iter.es6\");\ngoog.structs.Map = function(opt_map, var_args) {\n  this.map_ = {};\n  this.keys_ = [];\n  this.size = 0;\n  this.version_ = 0;\n  var argLength = arguments.length;\n  if (argLength > 1) {\n    if (argLength % 2) {\n      throw new Error(\"Uneven number of arguments\");\n    }\n    for (var i = 0; i < argLength; i += 2) {\n      this.set(arguments[i], arguments[i + 1]);\n    }\n  } else if (opt_map) {\n    this.addAll(opt_map);\n  }\n};\ngoog.structs.Map.prototype.getCount = function() {\n  return this.size;\n};\ngoog.structs.Map.prototype.getValues = function() {\n  this.cleanupKeysArray_();\n  var rv = [];\n  for (var i = 0; i < this.keys_.length; i++) {\n    var key = this.keys_[i];\n    rv.push(this.map_[key]);\n  }\n  return rv;\n};\ngoog.structs.Map.prototype.getKeys = function() {\n  this.cleanupKeysArray_();\n  return this.keys_.concat();\n};\ngoog.structs.Map.prototype.containsKey = function(key) {\n  return this.has(key);\n};\ngoog.structs.Map.prototype.has = function(key) {\n  return goog.structs.Map.hasKey_(this.map_, key);\n};\ngoog.structs.Map.prototype.containsValue = function(val) {\n  for (var i = 0; i < this.keys_.length; i++) {\n    var key = this.keys_[i];\n    if (goog.structs.Map.hasKey_(this.map_, key) && this.map_[key] == val) {\n      return true;\n    }\n  }\n  return false;\n};\ngoog.structs.Map.prototype.equals = function(otherMap, opt_equalityFn) {\n  if (this === otherMap) {\n    return true;\n  }\n  if (this.size != otherMap.getCount()) {\n    return false;\n  }\n  var equalityFn = opt_equalityFn || goog.structs.Map.defaultEquals;\n  this.cleanupKeysArray_();\n  for (var key, i = 0; key = this.keys_[i]; i++) {\n    if (!equalityFn(this.get(key), otherMap.get(key))) {\n      return false;\n    }\n  }\n  return true;\n};\ngoog.structs.Map.defaultEquals = function(a, b) {\n  return a === b;\n};\ngoog.structs.Map.prototype.isEmpty = function() {\n  return this.size == 0;\n};\ngoog.structs.Map.prototype.clear = function() {\n  this.map_ = {};\n  this.keys_.length = 0;\n  this.setSizeInternal_(0);\n  this.version_ = 0;\n};\ngoog.structs.Map.prototype.remove = function(key) {\n  return this.delete(key);\n};\ngoog.structs.Map.prototype.delete = function(key) {\n  if (goog.structs.Map.hasKey_(this.map_, key)) {\n    delete this.map_[key];\n    this.setSizeInternal_(this.size - 1);\n    this.version_++;\n    if (this.keys_.length > 2 * this.size) {\n      this.cleanupKeysArray_();\n    }\n    return true;\n  }\n  return false;\n};\ngoog.structs.Map.prototype.cleanupKeysArray_ = function() {\n  if (this.size != this.keys_.length) {\n    var srcIndex = 0;\n    var destIndex = 0;\n    while (srcIndex < this.keys_.length) {\n      var key = this.keys_[srcIndex];\n      if (goog.structs.Map.hasKey_(this.map_, key)) {\n        this.keys_[destIndex++] = key;\n      }\n      srcIndex++;\n    }\n    this.keys_.length = destIndex;\n  }\n  if (this.size != this.keys_.length) {\n    var seen = {};\n    var srcIndex = 0;\n    var destIndex = 0;\n    while (srcIndex < this.keys_.length) {\n      var key = this.keys_[srcIndex];\n      if (!goog.structs.Map.hasKey_(seen, key)) {\n        this.keys_[destIndex++] = key;\n        seen[key] = 1;\n      }\n      srcIndex++;\n    }\n    this.keys_.length = destIndex;\n  }\n};\ngoog.structs.Map.prototype.get = function(key, opt_val) {\n  if (goog.structs.Map.hasKey_(this.map_, key)) {\n    return this.map_[key];\n  }\n  return opt_val;\n};\ngoog.structs.Map.prototype.set = function(key, value) {\n  if (!goog.structs.Map.hasKey_(this.map_, key)) {\n    this.setSizeInternal_(this.size + 1);\n    this.keys_.push(key);\n    this.version_++;\n  }\n  this.map_[key] = value;\n};\ngoog.structs.Map.prototype.addAll = function(map) {\n  if (map instanceof goog.structs.Map) {\n    var keys = map.getKeys();\n    for (var i = 0; i < keys.length; i++) {\n      this.set(keys[i], map.get(keys[i]));\n    }\n  } else {\n    for (var key in map) {\n      this.set(key, map[key]);\n    }\n  }\n};\ngoog.structs.Map.prototype.forEach = function(f, opt_obj) {\n  var keys = this.getKeys();\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var value = this.get(key);\n    f.call(opt_obj, value, key, this);\n  }\n};\ngoog.structs.Map.prototype.clone = function() {\n  return new goog.structs.Map(this);\n};\ngoog.structs.Map.prototype.transpose = function() {\n  var transposed = new goog.structs.Map();\n  for (var i = 0; i < this.keys_.length; i++) {\n    var key = this.keys_[i];\n    var value = this.map_[key];\n    transposed.set(value, key);\n  }\n  return transposed;\n};\ngoog.structs.Map.prototype.toObject = function() {\n  this.cleanupKeysArray_();\n  var obj = {};\n  for (var i = 0; i < this.keys_.length; i++) {\n    var key = this.keys_[i];\n    obj[key] = this.map_[key];\n  }\n  return obj;\n};\ngoog.structs.Map.prototype.getKeyIterator = function() {\n  return this.__iterator__(true);\n};\ngoog.structs.Map.prototype.keys = function() {\n  return goog.iter.es6.ShimIterable.of(this.getKeyIterator()).toEs6();\n};\ngoog.structs.Map.prototype.getValueIterator = function() {\n  return this.__iterator__(false);\n};\ngoog.structs.Map.prototype.values = function() {\n  return goog.iter.es6.ShimIterable.of(this.getValueIterator()).toEs6();\n};\ngoog.structs.Map.prototype.entries = function() {\n  const self = this;\n  return goog.collections.iters.map(this.keys(), function(key) {\n    return [key, self.get(key)];\n  });\n};\ngoog.structs.Map.prototype.__iterator__ = function(opt_keys) {\n  this.cleanupKeysArray_();\n  var i = 0;\n  var version = this.version_;\n  var selfObj = this;\n  var newIter = new goog.iter.Iterator();\n  newIter.nextValueOrThrow = function() {\n    if (version != selfObj.version_) {\n      throw new Error(\"The map has changed since the iterator was created\");\n    }\n    if (i >= selfObj.keys_.length) {\n      throw goog.iter.StopIteration;\n    }\n    var key = selfObj.keys_[i++];\n    return opt_keys ? key : selfObj.map_[key];\n  };\n  return newIter;\n};\ngoog.structs.Map.prototype.setSizeInternal_ = function(newSize) {\n  this.size = newSize;\n};\ngoog.structs.Map.hasKey_ = function(obj, key) {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n};\n\n//# sourceMappingURL=goog.structs.map.js.map\n"],
"names":["goog","provide","require","structs","Map","goog.structs.Map","opt_map","var_args","map_","keys_","size","version_","argLength","arguments","length","Error","i","set","addAll","prototype","getCount","goog.structs.Map.prototype.getCount","getValues","goog.structs.Map.prototype.getValues","cleanupKeysArray_","rv","key","push","getKeys","goog.structs.Map.prototype.getKeys","concat","containsKey","goog.structs.Map.prototype.containsKey","has","goog.structs.Map.prototype.has","hasKey_","containsValue","goog.structs.Map.prototype.containsValue","val","equals","goog.structs.Map.prototype.equals","otherMap","opt_equalityFn","equalityFn","defaultEquals","get","goog.structs.Map.defaultEquals","a","b","isEmpty","goog.structs.Map.prototype.isEmpty","clear","goog.structs.Map.prototype.clear","setSizeInternal_","remove","goog.structs.Map.prototype.remove","delete","goog.structs.Map.prototype.delete","goog.structs.Map.prototype.cleanupKeysArray_","srcIndex","destIndex","seen","goog.structs.Map.prototype.get","opt_val","goog.structs.Map.prototype.set","value","goog.structs.Map.prototype.addAll","map","keys","forEach","goog.structs.Map.prototype.forEach","f","opt_obj","call","clone","goog.structs.Map.prototype.clone","transpose","goog.structs.Map.prototype.transpose","transposed","toObject","goog.structs.Map.prototype.toObject","obj","getKeyIterator","goog.structs.Map.prototype.getKeyIterator","__iterator__","goog.structs.Map.prototype.keys","iter","es6","ShimIterable","of","toEs6","getValueIterator","goog.structs.Map.prototype.getValueIterator","values","goog.structs.Map.prototype.values","entries","goog.structs.Map.prototype.entries","self","collections","iters","goog.structs.Map.prototype.__iterator__","opt_keys","version","selfObj","newIter","Iterator","nextValueOrThrow","newIter.nextValueOrThrow","StopIteration","goog.structs.Map.prototype.setSizeInternal_","newSize","goog.structs.Map.hasKey_","Object","hasOwnProperty"]
}
