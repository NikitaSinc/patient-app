{
"version":3,
"file":"com.cognitect.transit.caching.js",
"lineCount":106,
"mappings":"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",
"sources":["com.cognitect.transit.caching.js"],
"sourcesContent":["goog.provide(\"com.cognitect.transit.caching\");\ngoog.require(\"com.cognitect.transit.delimiters\");\ngoog.scope(function() {\n  var caching = com.cognitect.transit.caching, d = com.cognitect.transit.delimiters;\n  caching.MIN_SIZE_CACHEABLE = 3;\n  caching.BASE_CHAR_IDX = 48;\n  caching.CACHE_CODE_DIGITS = 44;\n  caching.MAX_CACHE_ENTRIES = caching.CACHE_CODE_DIGITS * caching.CACHE_CODE_DIGITS;\n  caching.MAX_CACHE_SIZE = 4096;\n  caching.isCacheable = function(string, asMapKey) {\n    if (string.length > caching.MIN_SIZE_CACHEABLE) {\n      if (asMapKey) {\n        return true;\n      } else {\n        var c0 = string.charAt(0), c1 = string.charAt(1);\n        if (c0 === d.ESC) {\n          return c1 === \":\" || c1 === \"$\" || c1 === \"#\";\n        } else {\n          return false;\n        }\n      }\n    } else {\n      return false;\n    }\n  };\n  caching.idxToCode = function(idx) {\n    var hi = Math.floor(idx / caching.CACHE_CODE_DIGITS), lo = idx % caching.CACHE_CODE_DIGITS, loc = String.fromCharCode(lo + caching.BASE_CHAR_IDX);\n    if (hi === 0) {\n      return d.SUB + loc;\n    } else {\n      return d.SUB + String.fromCharCode(hi + caching.BASE_CHAR_IDX) + loc;\n    }\n  };\n  caching.WriteCache = function() {\n    this.idx = 0;\n    this.gen = 0;\n    this.cacheSize = 0;\n    this.cache = {};\n  };\n  caching.WriteCache.prototype.write = function(string, asMapKey) {\n    if (caching.isCacheable(string, asMapKey)) {\n      if (this.cacheSize === caching.MAX_CACHE_SIZE) {\n        this.clear();\n        this.gen = 0;\n        this.cache = {};\n      } else if (this.idx === caching.MAX_CACHE_ENTRIES) {\n        this.clear();\n      }\n      var entry = this.cache[string];\n      if (entry == null) {\n        this.cache[string] = [caching.idxToCode(this.idx), this.gen];\n        this.idx++;\n        return string;\n      } else if (entry[1] != this.gen) {\n        entry[1] = this.gen;\n        entry[0] = caching.idxToCode(this.idx);\n        this.idx++;\n        return string;\n      } else {\n        return entry[0];\n      }\n    } else {\n      return string;\n    }\n  };\n  caching.WriteCache.prototype.clear = function Transit$WriteCache() {\n    this.idx = 0;\n    this.gen++;\n  };\n  caching.writeCache = function() {\n    return new caching.WriteCache();\n  };\n  caching.isCacheCode = function(string) {\n    return string.charAt(0) === d.SUB && string.charAt(1) !== \" \";\n  };\n  caching.codeToIdx = function(code) {\n    if (code.length === 2) {\n      return code.charCodeAt(1) - caching.BASE_CHAR_IDX;\n    } else {\n      var hi = (code.charCodeAt(1) - caching.BASE_CHAR_IDX) * caching.CACHE_CODE_DIGITS, lo = code.charCodeAt(2) - caching.BASE_CHAR_IDX;\n      return hi + lo;\n    }\n  };\n  caching.ReadCache = function Transit$ReadCache() {\n    this.idx = 0;\n    this.cache = [];\n  };\n  caching.ReadCache.prototype.write = function(obj, asMapKey) {\n    if (this.idx == caching.MAX_CACHE_ENTRIES) {\n      this.idx = 0;\n    }\n    this.cache[this.idx] = obj;\n    this.idx++;\n    return obj;\n  };\n  caching.ReadCache.prototype.read = function(string, asMapKey) {\n    return this.cache[caching.codeToIdx(string)];\n  };\n  caching.ReadCache.prototype.clear = function() {\n    this.idx = 0;\n  };\n  caching.readCache = function() {\n    return new caching.ReadCache();\n  };\n});\n\n//# sourceMappingURL=com.cognitect.transit.caching.js.map\n"],
"names":["goog","provide","require","scope","caching","com","cognitect","transit","d","delimiters","MIN_SIZE_CACHEABLE","BASE_CHAR_IDX","CACHE_CODE_DIGITS","MAX_CACHE_ENTRIES","MAX_CACHE_SIZE","isCacheable","caching.isCacheable","string","asMapKey","length","c0","charAt","c1","ESC","idxToCode","caching.idxToCode","idx","hi","Math","floor","lo","loc","String","fromCharCode","SUB","WriteCache","caching.WriteCache","gen","cacheSize","cache","prototype","write","caching.WriteCache.prototype.write","clear","entry","caching.WriteCache.prototype.clear","Transit$WriteCache","writeCache","caching.writeCache","isCacheCode","caching.isCacheCode","codeToIdx","caching.codeToIdx","code","charCodeAt","ReadCache","caching.ReadCache","Transit$ReadCache","caching.ReadCache.prototype.write","obj","read","caching.ReadCache.prototype.read","caching.ReadCache.prototype.clear","readCache","caching.readCache"]
}
