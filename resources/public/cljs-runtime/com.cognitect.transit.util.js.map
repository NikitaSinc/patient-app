{
"version":3,
"file":"com.cognitect.transit.util.js",
"lineCount":82,
"mappings":"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",
"sources":["com.cognitect.transit.util.js"],
"sourcesContent":["goog.provide(\"com.cognitect.transit.util\");\ngoog.require(\"goog.object\");\ngoog.scope(function() {\n  var util = com.cognitect.transit.util, gobject = goog.object;\n  if (typeof Object.keys != \"undefined\") {\n    util.objectKeys = function(obj) {\n      return Object.keys(obj);\n    };\n  } else {\n    util.objectKeys = function(obj) {\n      return gobject.getKeys(obj);\n    };\n  }\n  if (typeof Array.isArray != \"undefined\") {\n    util.isArray = function(obj) {\n      return Array.isArray(obj);\n    };\n  } else {\n    util.isArray = function(obj) {\n      return goog.typeOf(obj) === \"array\";\n    };\n  }\n  util.chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\\x3d\";\n  util.randInt = function(ub) {\n    return Math.round(Math.random() * ub);\n  };\n  util.randHex = function() {\n    return util.randInt(15).toString(16);\n  };\n  util.randomUUID = function() {\n    var rhex = (8 | 3 & util.randInt(14)).toString(16), ret = util.randHex() + util.randHex() + util.randHex() + util.randHex() + util.randHex() + util.randHex() + util.randHex() + util.randHex() + \"-\" + util.randHex() + util.randHex() + util.randHex() + util.randHex() + \"-\" + \"4\" + util.randHex() + util.randHex() + util.randHex() + \"-\" + rhex + util.randHex() + util.randHex() + util.randHex() + \"-\" + util.randHex() + util.randHex() + util.randHex() + util.randHex() + util.randHex() + util.randHex() + \n    util.randHex() + util.randHex() + util.randHex() + util.randHex() + util.randHex() + util.randHex();\n    return ret;\n  };\n  util.btoa = function(input) {\n    if (typeof btoa != \"undefined\") {\n      return btoa(input);\n    } else {\n      var str = String(input);\n      for (var block, charCode, idx = 0, map = util.chars, output = \"\"; str.charAt(idx | 0) || (map = \"\\x3d\", idx % 1); output += map.charAt(63 & block >> 8 - idx % 1 * 8)) {\n        charCode = str.charCodeAt(idx += 3 / 4);\n        if (charCode > 255) {\n          throw new Error(\"'btoa' failed: The string to be encoded contains characters outside of the Latin1 range.\");\n        }\n        block = block << 8 | charCode;\n      }\n      return output;\n    }\n  };\n  util.atob = function(input) {\n    if (typeof atob != \"undefined\") {\n      return atob(input);\n    } else {\n      var str = String(input).replace(/=+$/, \"\");\n      if (str.length % 4 == 1) {\n        throw new Error(\"'atob' failed: The string to be decoded is not correctly encoded.\");\n      }\n      for (var bc = 0, bs, buffer, idx = 0, output = \"\"; buffer = str.charAt(idx++); ~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer, bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0) {\n        buffer = util.chars.indexOf(buffer);\n      }\n      return output;\n    }\n  };\n  util.Uint8ToBase64 = function(u8Arr) {\n    var CHUNK_SIZE = 32768, index = 0, length = u8Arr.length, result = \"\", slice = null;\n    while (index < length) {\n      slice = u8Arr.subarray(index, Math.min(index + CHUNK_SIZE, length));\n      result += String.fromCharCode.apply(null, slice);\n      index += CHUNK_SIZE;\n    }\n    return util.btoa(result);\n  };\n  util.Base64ToUint8 = function(base64) {\n    var binary_string = util.atob(base64), len = binary_string.length, bytes = new Uint8Array(len);\n    for (var i = 0; i < len; i++) {\n      var ascii = binary_string.charCodeAt(i);\n      bytes[i] = ascii;\n    }\n    return bytes;\n  };\n});\n\n//# sourceMappingURL=com.cognitect.transit.util.js.map\n"],
"names":["goog","provide","require","scope","util","com","cognitect","transit","gobject","object","Object","keys","objectKeys","util.objectKeys","obj","getKeys","Array","isArray","util.isArray","typeOf","chars","randInt","util.randInt","ub","Math","round","random","randHex","util.randHex","toString","randomUUID","util.randomUUID","rhex","ret","btoa","util.btoa","input","str","String","block","charCode","idx","map","output","charAt","charCodeAt","Error","atob","util.atob","replace","length","bc","bs","buffer","fromCharCode","indexOf","Uint8ToBase64","util.Uint8ToBase64","u8Arr","CHUNK_SIZE","index","result","slice","subarray","min","apply","Base64ToUint8","util.Base64ToUint8","base64","binary_string","len","bytes","Uint8Array","i","ascii"]
}
