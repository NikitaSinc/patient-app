{"version":3,"sources":["stylo/tailwind/flex.cljc"],"mappings":";AAQA,2BAAA,2CAAA,sDAAA,2CAAA,0DAAA,eAAA,qEAAA,2CAAA,sDAAA,mBAAA,yDAAA,2CAAA,sDAAA,iBAAA,8DAAA,2CAAA,sDAAA,mBAAA,gEAAA,2CAAA,sDAAA,v6BAAKA;AAML,AAACC,kDAASD;AAGV,qCAAA,2CAAA,8DAAA,2CAAA,wEAAA,cAAA,4EAAA,2CAAA,wEAAA,sBAAA,6DAAA,2CAAA,wEAAA,iBAAA,4EAAA,2CAAA,wEAAA,p2BAAKE;AAKL,AAACD,kDAASC;AAGV,AAAAC,4DAAA,+DAAA;;6BACIC;AADJ,AAAA,0FAAA,mFAAA,8CAAA,2CAAA,+DAAA;;6BAEIA,EAAEC;AAFN,AAAA,0FAAA,mFAAA,8CAAA,2CAAA,+DAE0BA;;oBAAtBD,EAAEC;;;6BAAFD;;6BAAAA,EAAEC;;;;;;;;;AAMN,AAAAF,4DAAA,mEAAA;;6BACIC;AADJ,AAAA,0FAAA,mFAAA,8CAAA,2CAAA,mEAAA;;6BAEIA,EAAEC;AAFN,AAAA,0FAAA,mFAAA,8CAAA,2CAAA,mEAE4BA;;oBAAxBD,EAAEC;;;6BAAFD;;6BAAAA,EAAEC;;;;;;;;;AAMN,gCAAA,2CAAA,oEAAA,2CAAA,8DAAA,iBAAA,8DAAA,2CAAA,8DAAA,eAAA,kFAAA,2CAAA,8DAAA,1nBAAKC;AAIL,AAACL,kDAASK;AAKV,iCAAA,2CAAA,mEAAA,2CAAA,wDAAA,gBAAA,gEAAA,2CAAA,wDAAA,eAAA,iEAAA,2CAAA,wDAAA,YAAA,pmBAAKC,4pBAGmB,WAAKF;AAAL,AAAA,kDAAA,wDAAgB,iBAAAG,mBAAIH;AAAJ,AAAA,oBAAAG;AAAAA;;AAAA;;;;AAExC,AAACP,kDAASM;AAGV,kCAAA,2CAAA,oEAAA,2CAAA,mEAAA,qBAAA,8DAAA,2CAAA,mEAAA,mBAAA,qEAAA,2CAAA,mEAAA,iBAAA,yEAAA,2CAAA,mEAAA,mBAAA,sEAAA,2CAAA,mEAAA,rhCAAKE;AAML,AAACR,kDAASQ;AAGV,oCAAA,2CAAA,wEAAA,2CAAA,uEAAA,iBAAA,uEAAA,2CAAA,uEAAA,qBAAA,oEAAA,2CAAA,uEAAA,qBAAA,2EAAA,2CAAA,uEAAA,wBAAA,0EAAA,2CAAA,uEAAA,pkCAAKC;AAML,AAACT,kDAASS;AAGV,iCAAA,2CAAA,+DAAA,2CAAA,iEAAA,eAAA,iEAAA,2CAAA,iEAAA,qBAAA,6DAAA,2CAAA,iEAAA,mBAAA,oEAAA,2CAAA,iEAAA,iBAAA,oEAAA,2CAAA,iEAAA,r/BAAKC;AAML,AAACV,kDAASU;AAGV,sCAAA,2CAAA,wEAAA,2CAAA,4EAAA,qBAAA,0EAAA,2CAAA,4EAAA,iBAAA,oEAAA,2CAAA,4EAAA,mBAAA,2EAAA,2CAAA,4EAAA,wBAAA,0EAAA,2CAAA,4EAAA,hmCAAKC;AAML,AAACX,kDAASW","names":["stylo.tailwind.flex/flex","stylo.rule.defrules","stylo.tailwind.flex/flex-direction","stylo.rule/rule","_","x","stylo.tailwind.flex/flex-wrap","stylo.tailwind.flex/flex-order","or__5045__auto__","stylo.tailwind.flex/align-items","stylo.tailwind.flex/align-content","stylo.tailwind.flex/align-self","stylo.tailwind.flex/justify-content"],"sourcesContent":["(ns stylo.tailwind.flex\n  (:require\n   [stylo.rule :refer [rule defrules]]))\n\n\n;; https://tailwindcss.com/docs/display/#flex\n\n\n(def flex  {:flex  {:display \"flex\"}\n            :flex-initial  {:flex \"0 1 auto\"}\n            :flex-1  {:flex \"1 1 0%\"}\n            :flex-auto  {:flex \"1 1 auto\"}\n            :flex-none  {:flex \"none\"}})\n\n(defrules flex)\n\n;; https://tailwindcss.com/docs/flex-direction/#app\n(def flex-direction {:flex-row  {:flex-direction \"row\"}\n                     :flex-row-reverse  {:flex-direction \"row-reverse\"}\n                     :flex-col  {:flex-direction \"column\"}\n                     :flex-col-reverse  {:flex-direction \"column-reverse\"}})\n\n(defrules flex-direction)\n\n;; https://tailwindcss.com/docs/flex-grow/#app\n(defmethod rule :flex-grow\n  ([_] [[:& {:flex-grow 1}]])\n  ([_ x] [[:& {:flex-grow x}]]))\n\n\n;; https://tailwindcss.com/docs/flex-shrink/#app\n\n\n(defmethod rule :flex-shrink\n  ([_] [[:& {:flex-shrink 1}]])\n  ([_ x] [[:& {:flex-shrink x}]]))\n\n\n;; https://tailwindcss.com/docs/flex-wrap/#app\n\n\n(def flex-wrap {:flex-no-wrap  {:flex-wrap \"nowrap\"}\n                :flex-wrap  {:flex-wrap \"wrap\"}\n                :flex-:wrap-reverse  {:flex-wrap \"wrap-reverse\"}})\n\n(defrules flex-wrap)\n\n;; https://tailwindcss.com/docs/order/#app\n\n\n(def flex-order {:order-first  {:order -9999}\n                 :order-last  {:order 9999}\n                 :order-none  {:order 0}\n                 :order (fn [x] {:order (or x 1)})})\n\n(defrules flex-order)\n\n;; https://tailwindcss.com/docs/align-items/#app\n(def align-items {:items-start  {:align-items \"flex-start\"}\n                  :items-end  {:align-items \"flex-end\"}\n                  :items-center  {:align-items \"center\"}\n                  :items-baseline  {:align-items \"baseline\"}\n                  :items-stretch  {:align-items \"stretch\"}})\n\n(defrules align-items)\n\n;; https://tailwindcss.com/docs/align-content/#app\n(def align-content {:content-center  {:align-content \"center\"}\n                    :content-start  {:align-content \"flex-start\"}\n                    :content-end  {:align-content \"flex-start\"}\n                    :content-between  {:align-content \"space-between\"}\n                    :content-around  {:align-content \"space-around\"}})\n\n(defrules align-content)\n\n;; https://tailwindcss.com/docs/align-self/#app\n(def align-self {:self-auto  {:align-self \"auto\"}\n                 :self-start  {:align-self \"flex-start\"}\n                 :self-end  {:align-self \"flex-end\"}\n                 :self-center  {:align-self \"center\"}\n                 :self-stretch  {:align-self \"stretch\"}})\n\n(defrules align-self)\n\n;; https://tailwindcss.com/docs/justify-content/#app\n(def justify-content {:justify-start  {:justify-content \"flex-start\"}\n                      :justify-center  {:justify-content \"center\"}\n                      :justify-end  {:justify-content \"flex-end\"}\n                      :justify-between  {:justify-content \"space-between\"}\n                      :justify-around  {:justify-content \"space-around\"}})\n\n(defrules justify-content)\n"]}