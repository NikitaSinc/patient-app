{
"version":3,
"file":"out.goog.html.safestyle.js",
"lineCount":167,
"mappings":"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",
"sources":["out/goog/html/safestyle.js"],
"sourcesContent":["/*TRANSPILED*/goog.loadModule(function(exports) {'use strict';/*\n\n Copyright The Closure Library Authors.\n SPDX-License-Identifier: Apache-2.0\n*/\n'use strict';\ngoog.module(\"goog.html.SafeStyle\");\ngoog.module.declareLegacyNamespace();\nconst Const = goog.require(\"goog.string.Const\");\nconst SafeUrl = goog.require(\"goog.html.SafeUrl\");\nconst TypedString = goog.require(\"goog.string.TypedString\");\nconst {AssertionError, assert, fail} = goog.require(\"goog.asserts\");\nconst {contains, endsWith} = goog.require(\"goog.string.internal\");\nconst CONSTRUCTOR_TOKEN_PRIVATE = {};\nclass SafeStyle {\n  constructor(value, token) {\n    this.privateDoNotAccessOrElseSafeStyleWrappedValue_ = token === CONSTRUCTOR_TOKEN_PRIVATE ? value : \"\";\n    this.implementsGoogStringTypedString = true;\n  }\n  static fromConstant(style) {\n    const styleString = Const.unwrap(style);\n    if (styleString.length === 0) {\n      return SafeStyle.EMPTY;\n    }\n    assert(endsWith(styleString, \";\"), `Last character of style string is not ';': ${styleString}`);\n    assert(contains(styleString, \":\"), \"Style string must contain at least one ':', to \" + 'specify a \"name: value\" pair: ' + styleString);\n    return SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(styleString);\n  }\n  getTypedStringValue() {\n    return this.privateDoNotAccessOrElseSafeStyleWrappedValue_;\n  }\n  toString() {\n    return this.privateDoNotAccessOrElseSafeStyleWrappedValue_.toString();\n  }\n  static unwrap(safeStyle) {\n    if (safeStyle instanceof SafeStyle && safeStyle.constructor === SafeStyle) {\n      return safeStyle.privateDoNotAccessOrElseSafeStyleWrappedValue_;\n    } else {\n      fail(`expected object of type SafeStyle, got '${safeStyle}` + \"' of type \" + goog.typeOf(safeStyle));\n      return \"type_error:SafeStyle\";\n    }\n  }\n  static createSafeStyleSecurityPrivateDoNotAccessOrElse(style) {\n    return new SafeStyle(style, CONSTRUCTOR_TOKEN_PRIVATE);\n  }\n  static create(map) {\n    let style = \"\";\n    for (let name in map) {\n      if (Object.prototype.hasOwnProperty.call(map, name)) {\n        if (!/^[-_a-zA-Z0-9]+$/.test(name)) {\n          throw new Error(`Name allows only [-_a-zA-Z0-9], got: ${name}`);\n        }\n        let value = map[name];\n        if (value == null) {\n          continue;\n        }\n        if (Array.isArray(value)) {\n          value = value.map(sanitizePropertyValue).join(\" \");\n        } else {\n          value = sanitizePropertyValue(value);\n        }\n        style += `${name}:${value};`;\n      }\n    }\n    if (!style) {\n      return SafeStyle.EMPTY;\n    }\n    return SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(style);\n  }\n  static concat(var_args) {\n    let style = \"\";\n    const addArgument = argument => {\n      if (Array.isArray(argument)) {\n        argument.forEach(addArgument);\n      } else {\n        style += SafeStyle.unwrap(argument);\n      }\n    };\n    Array.prototype.forEach.call(arguments, addArgument);\n    if (!style) {\n      return SafeStyle.EMPTY;\n    }\n    return SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(style);\n  }\n}\nSafeStyle.EMPTY = SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(\"\");\nSafeStyle.INNOCUOUS_STRING = \"zClosurez\";\nSafeStyle.PropertyValue;\nSafeStyle.PropertyMap;\nfunction sanitizePropertyValue(value) {\n  if (value instanceof SafeUrl) {\n    const url = SafeUrl.unwrap(value);\n    return 'url(\"' + url.replace(/</g, \"%3c\").replace(/[\\\\\"]/g, \"\\\\$\\x26\") + '\")';\n  }\n  const result = value instanceof Const ? Const.unwrap(value) : sanitizePropertyValueString(String(value));\n  if (/[{;}]/.test(result)) {\n    throw new AssertionError(\"Value does not allow [{;}], got: %s.\", [result]);\n  }\n  return result;\n}\nfunction sanitizePropertyValueString(value) {\n  const valueWithoutFunctions = value.replace(FUNCTIONS_RE, \"$1\").replace(FUNCTIONS_RE, \"$1\").replace(URL_RE, \"url\");\n  if (!VALUE_RE.test(valueWithoutFunctions)) {\n    fail(`String value allows only ${VALUE_ALLOWED_CHARS}` + \" and simple functions, got: \" + value);\n    return SafeStyle.INNOCUOUS_STRING;\n  } else if (COMMENT_RE.test(value)) {\n    fail(`String value disallows comments, got: ${value}`);\n    return SafeStyle.INNOCUOUS_STRING;\n  } else if (!hasBalancedQuotes(value)) {\n    fail(`String value requires balanced quotes, got: ${value}`);\n    return SafeStyle.INNOCUOUS_STRING;\n  } else if (!hasBalancedSquareBrackets(value)) {\n    fail(\"String value requires balanced square brackets and one\" + \" identifier per pair of brackets, got: \" + value);\n    return SafeStyle.INNOCUOUS_STRING;\n  }\n  return sanitizeUrl(value);\n}\nfunction hasBalancedQuotes(value) {\n  let outsideSingle = true;\n  let outsideDouble = true;\n  for (let i = 0; i < value.length; i++) {\n    const c = value.charAt(i);\n    if (c == \"'\" && outsideDouble) {\n      outsideSingle = !outsideSingle;\n    } else if (c == '\"' && outsideSingle) {\n      outsideDouble = !outsideDouble;\n    }\n  }\n  return outsideSingle && outsideDouble;\n}\nfunction hasBalancedSquareBrackets(value) {\n  let outside = true;\n  const tokenRe = /^[-_a-zA-Z0-9]$/;\n  for (let i = 0; i < value.length; i++) {\n    const c = value.charAt(i);\n    if (c == \"]\") {\n      if (outside) {\n        return false;\n      }\n      outside = true;\n    } else if (c == \"[\") {\n      if (!outside) {\n        return false;\n      }\n      outside = false;\n    } else if (!outside && !tokenRe.test(c)) {\n      return false;\n    }\n  }\n  return outside;\n}\nconst VALUE_ALLOWED_CHARS = \"[-,.\\\"'%_!# a-zA-Z0-9\\\\[\\\\]]\";\nconst VALUE_RE = new RegExp(`^${VALUE_ALLOWED_CHARS}+\\$`);\nconst URL_RE = new RegExp(\"\\\\b(url\\\\([ \\t\\n]*)(\" + \"'[ -\\x26(-\\\\[\\\\]-~]*'\" + '|\"[ !#-\\\\[\\\\]-~]*\"' + \"|[!#-\\x26*-\\\\[\\\\]-~]*\" + \")([ \\t\\n]*\\\\))\", \"g\");\nconst ALLOWED_FUNCTIONS = [\"calc\", \"cubic-bezier\", \"fit-content\", \"hsl\", \"hsla\", \"linear-gradient\", \"matrix\", \"minmax\", \"repeat\", \"rgb\", \"rgba\", \"(rotate|scale|translate)(X|Y|Z|3d)?\", \"var\",];\nconst FUNCTIONS_RE = new RegExp(\"\\\\b(\" + ALLOWED_FUNCTIONS.join(\"|\") + \")\" + \"\\\\([-+*/0-9a-z.%#\\\\[\\\\], ]+\\\\)\", \"g\");\nconst COMMENT_RE = /\\/\\*/;\nfunction sanitizeUrl(value) {\n  return value.replace(URL_RE, (match, before, url, after) => {\n    let quote = \"\";\n    url = url.replace(/^(['\"])(.*)\\1$/, (match, start, inside) => {\n      quote = start;\n      return inside;\n    });\n    const sanitized = SafeUrl.sanitize(url).getTypedStringValue();\n    return before + quote + sanitized + quote + after;\n  });\n}\nexports = SafeStyle;\n\n;return exports;});\n"],
"names":["goog","loadModule","exports","module","declareLegacyNamespace","Const","require","SafeUrl","TypedString","AssertionError","assert","fail","contains","endsWith","CONSTRUCTOR_TOKEN_PRIVATE","SafeStyle","constructor","value","token","privateDoNotAccessOrElseSafeStyleWrappedValue_","implementsGoogStringTypedString","fromConstant","style","styleString","unwrap","length","EMPTY","createSafeStyleSecurityPrivateDoNotAccessOrElse","getTypedStringValue","toString","safeStyle","typeOf","create","map","name","Object","prototype","hasOwnProperty","call","test","Error","Array","isArray","sanitizePropertyValue","join","concat","var_args","addArgument","argument","forEach","arguments","INNOCUOUS_STRING","PropertyValue","PropertyMap","url","replace","result","sanitizePropertyValueString","String","valueWithoutFunctions","FUNCTIONS_RE","URL_RE","VALUE_RE","VALUE_ALLOWED_CHARS","COMMENT_RE","hasBalancedQuotes","hasBalancedSquareBrackets","sanitizeUrl","outsideSingle","outsideDouble","i","c","charAt","outside","tokenRe","RegExp","ALLOWED_FUNCTIONS","match","before","after","quote","start","inside","sanitized","sanitize"]
}
