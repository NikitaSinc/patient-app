{
"version":3,
"file":"goog.structs.set.js",
"lineCount":118,
"mappings":"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",
"sources":["goog.structs.set.js"],
"sourcesContent":["goog.provide(\"goog.structs.Set\");\ngoog.require(\"goog.structs\");\ngoog.require(\"goog.structs.Collection\");\ngoog.require(\"goog.structs.Map\");\ngoog.requireType(\"goog.iter.Iterator\");\ngoog.structs.Set = function(opt_values) {\n  this.map_ = new goog.structs.Map();\n  this.size = 0;\n  if (opt_values) {\n    this.addAll(opt_values);\n  }\n};\ngoog.structs.Set.getUid_ = goog.getUid;\ngoog.structs.Set.getKey_ = function(val) {\n  var type = typeof val;\n  if (type == \"object\" && val || type == \"function\") {\n    return \"o\" + goog.structs.Set.getUid_(val);\n  } else {\n    return type.substr(0, 1) + val;\n  }\n};\ngoog.structs.Set.prototype.getCount = function() {\n  return this.map_.size;\n};\ngoog.structs.Set.prototype.add = function(element) {\n  this.map_.set(goog.structs.Set.getKey_(element), element);\n  this.setSizeInternal_(this.map_.size);\n};\ngoog.structs.Set.prototype.addAll = function(col) {\n  var values = goog.structs.getValues(col);\n  var l = values.length;\n  for (var i = 0; i < l; i++) {\n    this.add(values[i]);\n  }\n  this.setSizeInternal_(this.map_.size);\n};\ngoog.structs.Set.prototype.removeAll = function(col) {\n  var values = goog.structs.getValues(col);\n  var l = values.length;\n  for (var i = 0; i < l; i++) {\n    this.remove(values[i]);\n  }\n  this.setSizeInternal_(this.map_.size);\n};\ngoog.structs.Set.prototype.delete = function(element) {\n  const rv = this.map_.remove(goog.structs.Set.getKey_(element));\n  this.setSizeInternal_(this.map_.size);\n  return rv;\n};\ngoog.structs.Set.prototype.remove = function(element) {\n  return this.delete(element);\n};\ngoog.structs.Set.prototype.clear = function() {\n  this.map_.clear();\n  this.setSizeInternal_(0);\n};\ngoog.structs.Set.prototype.isEmpty = function() {\n  return this.map_.size === 0;\n};\ngoog.structs.Set.prototype.has = function(element) {\n  return this.map_.containsKey(goog.structs.Set.getKey_(element));\n};\ngoog.structs.Set.prototype.contains = function(element) {\n  return this.map_.containsKey(goog.structs.Set.getKey_(element));\n};\ngoog.structs.Set.prototype.containsAll = function(col) {\n  return goog.structs.every(col, this.contains, this);\n};\ngoog.structs.Set.prototype.intersection = function(col) {\n  var result = new goog.structs.Set();\n  var values = goog.structs.getValues(col);\n  for (var i = 0; i < values.length; i++) {\n    var value = values[i];\n    if (this.contains(value)) {\n      result.add(value);\n    }\n  }\n  return result;\n};\ngoog.structs.Set.prototype.difference = function(col) {\n  var result = this.clone();\n  result.removeAll(col);\n  return result;\n};\ngoog.structs.Set.prototype.getValues = function() {\n  return this.map_.getValues();\n};\ngoog.structs.Set.prototype.values = function() {\n  return this.map_.values();\n};\ngoog.structs.Set.prototype.clone = function() {\n  return new goog.structs.Set(this);\n};\ngoog.structs.Set.prototype.equals = function(col) {\n  return this.getCount() == goog.structs.getCount(col) && this.isSubsetOf(col);\n};\ngoog.structs.Set.prototype.isSubsetOf = function(col) {\n  var colCount = goog.structs.getCount(col);\n  if (this.getCount() > colCount) {\n    return false;\n  }\n  if (!(col instanceof goog.structs.Set) && colCount > 5) {\n    col = new goog.structs.Set(col);\n  }\n  return goog.structs.every(this, function(value) {\n    return goog.structs.contains(col, value);\n  });\n};\ngoog.structs.Set.prototype.__iterator__ = function(opt_keys) {\n  return this.map_.__iterator__(false);\n};\ngoog.structs.Set.prototype[Symbol.iterator] = function() {\n  return this.values();\n};\ngoog.structs.Set.prototype.setSizeInternal_ = function(newSize) {\n  this.size = newSize;\n};\n\n//# sourceMappingURL=goog.structs.set.js.map\n"],
"names":["goog","provide","require","requireType","structs","Set","goog.structs.Set","opt_values","map_","Map","size","addAll","getUid_","getUid","getKey_","goog.structs.Set.getKey_","val","type","substr","prototype","getCount","goog.structs.Set.prototype.getCount","add","goog.structs.Set.prototype.add","element","set","setSizeInternal_","goog.structs.Set.prototype.addAll","col","values","getValues","l","length","i","removeAll","goog.structs.Set.prototype.removeAll","remove","delete","goog.structs.Set.prototype.delete","rv","goog.structs.Set.prototype.remove","clear","goog.structs.Set.prototype.clear","isEmpty","goog.structs.Set.prototype.isEmpty","has","goog.structs.Set.prototype.has","containsKey","contains","goog.structs.Set.prototype.contains","containsAll","goog.structs.Set.prototype.containsAll","every","intersection","goog.structs.Set.prototype.intersection","result","value","difference","goog.structs.Set.prototype.difference","clone","goog.structs.Set.prototype.getValues","goog.structs.Set.prototype.values","goog.structs.Set.prototype.clone","equals","goog.structs.Set.prototype.equals","isSubsetOf","goog.structs.Set.prototype.isSubsetOf","colCount","__iterator__","goog.structs.Set.prototype.__iterator__","opt_keys","Symbol","iterator","goog.structs.Set.prototype.setSizeInternal_","newSize"]
}
