{
"version":3,
"file":"goog.structs.heap.js",
"lineCount":140,
"mappings":"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",
"sources":["goog.structs.heap.js"],
"sourcesContent":["goog.provide(\"goog.structs.Heap\");\ngoog.require(\"goog.array\");\ngoog.require(\"goog.object\");\ngoog.require(\"goog.structs.Node\");\ngoog.structs.Heap = function(opt_heap) {\n  this.nodes_ = [];\n  if (opt_heap) {\n    this.insertAll(opt_heap);\n  }\n};\ngoog.structs.Heap.prototype.insert = function(key, value) {\n  var node = new goog.structs.Node(key, value);\n  var nodes = this.nodes_;\n  nodes.push(node);\n  this.moveUp_(nodes.length - 1);\n};\ngoog.structs.Heap.prototype.insertAll = function(heap) {\n  var keys, values;\n  if (heap instanceof goog.structs.Heap) {\n    keys = heap.getKeys();\n    values = heap.getValues();\n    if (this.getCount() <= 0) {\n      var nodes = this.nodes_;\n      for (var i = 0; i < keys.length; i++) {\n        nodes.push(new goog.structs.Node(keys[i], values[i]));\n      }\n      return;\n    }\n  } else {\n    keys = goog.object.getKeys(heap);\n    values = goog.object.getValues(heap);\n  }\n  for (var i = 0; i < keys.length; i++) {\n    this.insert(keys[i], values[i]);\n  }\n};\ngoog.structs.Heap.prototype.remove = function() {\n  var nodes = this.nodes_;\n  var count = nodes.length;\n  var rootNode = nodes[0];\n  if (count <= 0) {\n    return undefined;\n  } else if (count == 1) {\n    goog.array.clear(nodes);\n  } else {\n    nodes[0] = nodes.pop();\n    this.moveDown_(0);\n  }\n  return rootNode.getValue();\n};\ngoog.structs.Heap.prototype.peek = function() {\n  var nodes = this.nodes_;\n  if (nodes.length == 0) {\n    return undefined;\n  }\n  return nodes[0].getValue();\n};\ngoog.structs.Heap.prototype.peekKey = function() {\n  return this.nodes_[0] && this.nodes_[0].getKey();\n};\ngoog.structs.Heap.prototype.moveDown_ = function(index) {\n  var nodes = this.nodes_;\n  var count = nodes.length;\n  var node = nodes[index];\n  while (index < count >> 1) {\n    var leftChildIndex = this.getLeftChildIndex_(index);\n    var rightChildIndex = this.getRightChildIndex_(index);\n    var smallerChildIndex = rightChildIndex < count && nodes[rightChildIndex].getKey() < nodes[leftChildIndex].getKey() ? rightChildIndex : leftChildIndex;\n    if (nodes[smallerChildIndex].getKey() > node.getKey()) {\n      break;\n    }\n    nodes[index] = nodes[smallerChildIndex];\n    index = smallerChildIndex;\n  }\n  nodes[index] = node;\n};\ngoog.structs.Heap.prototype.moveUp_ = function(index) {\n  var nodes = this.nodes_;\n  var node = nodes[index];\n  while (index > 0) {\n    var parentIndex = this.getParentIndex_(index);\n    if (nodes[parentIndex].getKey() > node.getKey()) {\n      nodes[index] = nodes[parentIndex];\n      index = parentIndex;\n    } else {\n      break;\n    }\n  }\n  nodes[index] = node;\n};\ngoog.structs.Heap.prototype.getLeftChildIndex_ = function(index) {\n  return index * 2 + 1;\n};\ngoog.structs.Heap.prototype.getRightChildIndex_ = function(index) {\n  return index * 2 + 2;\n};\ngoog.structs.Heap.prototype.getParentIndex_ = function(index) {\n  return index - 1 >> 1;\n};\ngoog.structs.Heap.prototype.getValues = function() {\n  var nodes = this.nodes_;\n  var rv = [];\n  var l = nodes.length;\n  for (var i = 0; i < l; i++) {\n    rv.push(nodes[i].getValue());\n  }\n  return rv;\n};\ngoog.structs.Heap.prototype.getKeys = function() {\n  var nodes = this.nodes_;\n  var rv = [];\n  var l = nodes.length;\n  for (var i = 0; i < l; i++) {\n    rv.push(nodes[i].getKey());\n  }\n  return rv;\n};\ngoog.structs.Heap.prototype.containsValue = function(val) {\n  return goog.array.some(this.nodes_, function(node) {\n    return node.getValue() == val;\n  });\n};\ngoog.structs.Heap.prototype.containsKey = function(key) {\n  return goog.array.some(this.nodes_, function(node) {\n    return node.getKey() == key;\n  });\n};\ngoog.structs.Heap.prototype.clone = function() {\n  return new goog.structs.Heap(this);\n};\ngoog.structs.Heap.prototype.getCount = function() {\n  return this.nodes_.length;\n};\ngoog.structs.Heap.prototype.isEmpty = function() {\n  return this.nodes_.length === 0;\n};\ngoog.structs.Heap.prototype.clear = function() {\n  goog.array.clear(this.nodes_);\n};\n\n//# sourceMappingURL=goog.structs.heap.js.map\n"],
"names":["goog","provide","require","structs","Heap","goog.structs.Heap","opt_heap","nodes_","insertAll","prototype","insert","goog.structs.Heap.prototype.insert","key","value","node","Node","nodes","push","moveUp_","length","goog.structs.Heap.prototype.insertAll","heap","keys","values","getKeys","getValues","getCount","i","object","remove","goog.structs.Heap.prototype.remove","count","rootNode","undefined","array","clear","pop","moveDown_","getValue","peek","goog.structs.Heap.prototype.peek","peekKey","goog.structs.Heap.prototype.peekKey","getKey","goog.structs.Heap.prototype.moveDown_","index","leftChildIndex","getLeftChildIndex_","rightChildIndex","getRightChildIndex_","smallerChildIndex","goog.structs.Heap.prototype.moveUp_","parentIndex","getParentIndex_","goog.structs.Heap.prototype.getLeftChildIndex_","goog.structs.Heap.prototype.getRightChildIndex_","goog.structs.Heap.prototype.getParentIndex_","goog.structs.Heap.prototype.getValues","rv","l","goog.structs.Heap.prototype.getKeys","containsValue","goog.structs.Heap.prototype.containsValue","val","some","containsKey","goog.structs.Heap.prototype.containsKey","clone","goog.structs.Heap.prototype.clone","goog.structs.Heap.prototype.getCount","isEmpty","goog.structs.Heap.prototype.isEmpty","goog.structs.Heap.prototype.clear"]
}
