{
"version":3,
"file":"com.cognitect.transit.eq.js",
"lineCount":160,
"mappings":"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",
"sources":["com.cognitect.transit.eq.js"],
"sourcesContent":["goog.provide(\"com.cognitect.transit.eq\");\ngoog.require(\"com.cognitect.transit.util\");\ngoog.scope(function() {\n  var eq = com.cognitect.transit.eq, util = com.cognitect.transit.util;\n  eq.hashCodeProperty = \"transit$hashCode$\";\n  eq.hashCodeCounter = 1;\n  eq.equals = function(x, y) {\n    if (x == null) {\n      return y == null;\n    } else if (x === y) {\n      return true;\n    } else if (typeof x === \"object\") {\n      if (util.isArray(x)) {\n        if (util.isArray(y)) {\n          if (x.length === y.length) {\n            for (var i = 0; i < x.length; i++) {\n              if (!eq.equals(x[i], y[i])) {\n                return false;\n              }\n            }\n            return true;\n          } else {\n            return false;\n          }\n        } else {\n          return false;\n        }\n      } else if (x.com$cognitect$transit$equals) {\n        return x.com$cognitect$transit$equals(y);\n      } else if (y != null && typeof y === \"object\") {\n        if (y.com$cognitect$transit$equals) {\n          return y.com$cognitect$transit$equals(x);\n        } else {\n          var xklen = 0, yklen = util.objectKeys(y).length;\n          for (var p in x) {\n            if (!x.hasOwnProperty(p)) {\n              continue;\n            }\n            xklen++;\n            if (!y.hasOwnProperty(p)) {\n              return false;\n            } else {\n              if (!eq.equals(x[p], y[p])) {\n                return false;\n              }\n            }\n          }\n          return xklen === yklen;\n        }\n      } else {\n        return false;\n      }\n    } else {\n      return false;\n    }\n  };\n  eq.hashCombine = function(seed, hash) {\n    return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2);\n  };\n  eq.stringCodeCache = {};\n  eq.stringCodeCacheSize = 0;\n  eq.STR_CACHE_MAX = 256;\n  eq.hashString = function(str) {\n    var cached = eq.stringCodeCache[str];\n    if (cached != null) {\n      return cached;\n    }\n    var code = 0;\n    for (var i = 0; i < str.length; ++i) {\n      code = 31 * code + str.charCodeAt(i);\n      code %= 4294967296;\n    }\n    eq.stringCodeCacheSize++;\n    if (eq.stringCodeCacheSize >= eq.STR_CACHE_MAX) {\n      eq.stringCodeCache = {};\n      eq.stringCodeCacheSize = 1;\n    }\n    eq.stringCodeCache[str] = code;\n    return code;\n  };\n  eq.hashMapLike = function(m) {\n    var code = 0;\n    if (m.forEach != null) {\n      m.forEach(function(val, key, m) {\n        code = (code + (eq.hashCode(key) ^ eq.hashCode(val))) % 4503599627370496;\n      });\n    } else {\n      var keys = util.objectKeys(m);\n      for (var i = 0; i < keys.length; i++) {\n        var key = keys[i];\n        var val = m[key];\n        code = (code + (eq.hashCode(key) ^ eq.hashCode(val))) % 4503599627370496;\n      }\n    }\n    return code;\n  };\n  eq.hashArrayLike = function(arr) {\n    var code = 0;\n    if (util.isArray(arr)) {\n      for (var i = 0; i < arr.length; i++) {\n        code = eq.hashCombine(code, eq.hashCode(arr[i]));\n      }\n    } else if (arr.forEach) {\n      arr.forEach(function(x, i) {\n        code = eq.hashCombine(code, eq.hashCode(x));\n      });\n    }\n    return code;\n  };\n  eq.hashCode = function(x) {\n    if (x == null) {\n      return 0;\n    } else {\n      switch(typeof x) {\n        case \"number\":\n          return x;\n          break;\n        case \"boolean\":\n          return x === true ? 1 : 0;\n          break;\n        case \"string\":\n          return eq.hashString(x);\n          break;\n        case \"function\":\n          var code = x[eq.hashCodeProperty];\n          if (code) {\n            return code;\n          } else {\n            code = eq.hashCodeCounter;\n            if (typeof Object.defineProperty != \"undefined\") {\n              Object.defineProperty(x, eq.hashCodeProperty, {value:code, enumerable:false});\n            } else {\n              x[eq.hashCodeProperty] = code;\n            }\n            eq.hashCodeCounter++;\n            return code;\n          }\n          break;\n        default:\n          if (x instanceof Date) {\n            return x.valueOf();\n          } else if (util.isArray(x)) {\n            return eq.hashArrayLike(x);\n          }\n          if (x.com$cognitect$transit$hashCode) {\n            return x.com$cognitect$transit$hashCode();\n          } else {\n            return eq.hashMapLike(x);\n          }\n          break;\n      }\n    }\n  };\n  eq.extendToEQ = function(obj, opts) {\n    obj.com$cognitect$transit$hashCode = opts[\"hashCode\"];\n    obj.com$cognitect$transit$equals = opts[\"equals\"];\n    return obj;\n  };\n});\n\n//# sourceMappingURL=com.cognitect.transit.eq.js.map\n"],
"names":["goog","provide","require","scope","eq","com","cognitect","transit","util","hashCodeProperty","hashCodeCounter","equals","eq.equals","x","y","isArray","length","i","com$cognitect$transit$equals","xklen","yklen","objectKeys","p","hasOwnProperty","hashCombine","eq.hashCombine","seed","hash","stringCodeCache","stringCodeCacheSize","STR_CACHE_MAX","hashString","eq.hashString","str","cached","code","charCodeAt","hashMapLike","eq.hashMapLike","m","forEach","val","key","hashCode","keys","hashArrayLike","eq.hashArrayLike","arr","eq.hashCode","Object","defineProperty","value","enumerable","Date","valueOf","com$cognitect$transit$hashCode","extendToEQ","eq.extendToEQ","obj","opts"]
}
