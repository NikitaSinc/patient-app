{
"version":3,
"file":"out.goog.string.stringformat.js",
"lineCount":72,
"mappings":"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",
"sources":["out/goog/string/stringformat.js"],
"sourcesContent":["/*TRANSPILED*//*\n\n Copyright The Closure Library Authors.\n SPDX-License-Identifier: Apache-2.0\n*/\n'use strict';\ngoog.provide(\"goog.string.format\");\ngoog.require(\"goog.string\");\ngoog.string.format = function(formatString, var_args) {\n  const args = Array.prototype.slice.call(arguments);\n  const template = args.shift();\n  if (typeof template == \"undefined\") {\n    throw new Error(\"[goog.string.format] Template required\");\n  }\n  const formatRe = /%([0\\- \\+]*)(\\d+)?(\\.(\\d+))?([%sfdiu])/g;\n  function replacerDemuxer(match, flags, width, dotp, precision, type, offset, wholeString) {\n    if (type == \"%\") {\n      return \"%\";\n    }\n    const value = args.shift();\n    if (typeof value == \"undefined\") {\n      throw new Error(\"[goog.string.format] Not enough arguments\");\n    }\n    arguments[0] = value;\n    return goog.string.format.demuxes_[type].apply(null, arguments);\n  }\n  return template.replace(formatRe, replacerDemuxer);\n};\ngoog.string.format.demuxes_ = {};\ngoog.string.format.demuxes_[\"s\"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {\n  let replacement = value;\n  if (isNaN(width) || width == \"\" || replacement.length >= Number(width)) {\n    return replacement;\n  }\n  if (flags.indexOf(\"-\", 0) > -1) {\n    replacement = replacement + goog.string.repeat(\" \", Number(width) - replacement.length);\n  } else {\n    replacement = goog.string.repeat(\" \", Number(width) - replacement.length) + replacement;\n  }\n  return replacement;\n};\ngoog.string.format.demuxes_[\"f\"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {\n  let replacement = value.toString();\n  if (!(isNaN(precision) || precision == \"\")) {\n    replacement = parseFloat(value).toFixed(precision);\n  }\n  let sign;\n  if (Number(value) < 0) {\n    sign = \"-\";\n  } else if (flags.indexOf(\"+\") >= 0) {\n    sign = \"+\";\n  } else if (flags.indexOf(\" \") >= 0) {\n    sign = \" \";\n  } else {\n    sign = \"\";\n  }\n  if (Number(value) >= 0) {\n    replacement = sign + replacement;\n  }\n  if (isNaN(width) || replacement.length >= Number(width)) {\n    return replacement;\n  }\n  replacement = isNaN(precision) ? Math.abs(Number(value)).toString() : Math.abs(Number(value)).toFixed(precision);\n  const padCount = Number(width) - replacement.length - sign.length;\n  if (flags.indexOf(\"-\", 0) >= 0) {\n    replacement = sign + replacement + goog.string.repeat(\" \", padCount);\n  } else {\n    const paddingChar = flags.indexOf(\"0\", 0) >= 0 ? \"0\" : \" \";\n    replacement = sign + goog.string.repeat(paddingChar, padCount) + replacement;\n  }\n  return replacement;\n};\ngoog.string.format.demuxes_[\"d\"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {\n  return goog.string.format.demuxes_[\"f\"](parseInt(value, 10), flags, width, dotp, 0, type, offset, wholeString);\n};\ngoog.string.format.demuxes_[\"i\"] = goog.string.format.demuxes_[\"d\"];\ngoog.string.format.demuxes_[\"u\"] = goog.string.format.demuxes_[\"d\"];\n"],
"names":["goog","provide","require","string","format","goog.string.format","formatString","var_args","args","Array","prototype","slice","call","arguments","template","shift","Error","formatRe","replacerDemuxer","match","flags","width","dotp","precision","type","offset","wholeString","value","demuxes_","apply","replace","replacement","isNaN","length","Number","indexOf","repeat","toString","parseFloat","toFixed","sign","Math","abs","padCount","paddingChar","parseInt"]
}
